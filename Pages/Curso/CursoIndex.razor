@page "/usuarios"
@using Dtos.User
@inject HttpClient Htpp
@inject NavigationManager Navigation
@inject IJSRuntime JS
<PageTitle>Usuarios</PageTitle>

<h3 class="text-2xl font-bold text-teal-600">Usuarios</h3>

@* Botao Adicionar *@
<div class="flex justify-end">
    <a class="myif-add-button" href="/usuarios/criar">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"
            stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round"
                d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        Adicionar Usuario
    </a>
</div>

@if (Users is null)
{
    <p>Carregando...</p>
}
else
{
    @* Tabela de Cursos *@
    <table class="myif-table">
        <thead>
            <tr class="myif-table-row-th">
                <th class="px-4 py-3">Nome</th>
                <th class="px-4 py-3">Telegone</th>
                <th class="px-4 py-3">Email</th>
                <th class="px-4 py-3"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr class="myif-table-row">
                    <td class="px-4 py-3">@user.Name</td>
                    <td class="px-4 py-3">@user.Email</td>
                    <td class="px-4 py-3">@user.Phone</td>
                    <td class="px-4 py-3">
                        @* Botao Editar *@
                        <button class="myif-edit-button" @onclick="() => EditarUser(user.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round"
                            d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                            </svg>
                        </button>
                        @* Botao Excluir *@
                        <button class="myif-remove-button" @onclick="() => ExcluirUser(user.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round"
                            d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@code
{
   
    public List<UserResponseDto> Users { get; set; }


    protected override async Task OnInitializedAsync()
    {
        @* Fazer a requisicao pra api e pegar o resultado e armazenar em Cursos *@
        Users = await Htpp.GetFromJsonAsync<List<UserResponseDto>>("/usuarios");
    }

    @* Método que vai navegar para a página com o form para editar *@
    private void EditarUser(int id)
    {
        @* Navegar para o form de edição *@
        Navigation.NavigateTo($"/usuarios/editar/{id}");
    }

     private async Task ExcluirUser(int id)
    {
        bool excluir = await JS.InvokeAsync<bool>("confirm", "Deseja mesmo excluir o curso?");


        if (excluir)
        {
            @* Fazer a requisicao do tipo Delete pra excluir o curso *@
            await Htpp.DeleteAsync($"/usuarios/{id}");

            @* Remover da lista que está sendo exibida na tela (que vai atualizar a tabela) *@
            Users.RemoveAll(user => user.Id == id);
        }

    }

}
